spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}
server.port=${PORT}

spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}

spring.jpa.show-sql=false

# Configuración para evitar el modo de solo lectura
spring.datasource.hikari.read-only=false
spring.datasource.hikari.auto-commit=true

# Configuración de transacciones
spring.transaction.default-timeout=60
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

# Configuración de Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Configuración adicional para solucionar problemas de conexión
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=3000

# Optimizaciones de memoria
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# Optimizaciones JPA/Hibernate
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Configuración del servidor para optimizar memoria
server.tomcat.max-threads=50
server.tomcat.min-spare-threads=10
server.tomcat.max-connections=200
server.tomcat.accept-count=50
server.tomcat.connection-timeout=20000
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Optimizaciones adicionales de memoria
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Configuración de logging optimizada
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.apache.catalina=WARN
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Configuración de cache HTTP
spring.web.resources.cache.cachecontrol.max-age=31536000
spring.web.resources.cache.cachecontrol.cache-public=true

# Configuración para servir archivos estáticos
spring.web.resources.static-locations=classpath:/static/

# Configuración OAuth2 para Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${PUBLIC_URL_GOOGLE}/login/oauth2/code/google

# Configuración de subida de archivos
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB

# Configuración de Cloudinary para almacenamiento de imágenes
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}
